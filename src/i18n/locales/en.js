const en = {
  aside: {
    nav: {
      HOME: 'Home',
      USERS: 'Users',
      ROLES: 'Roles',
      HISTORY: 'History',
      LOG: 'Log API',
      SYSTEM: 'System',
      SCHEDULED: 'Scheduled Tasks',
      LOGS: 'Logs levels',
    },
  },
  header: {
    PROFILE: 'Profile',
    LOGOUT: 'Logout',
  },
  login: {
    IDENTIFIER: 'Username',
    PASSWORD: 'Password',
    TITLE: 'Please sign in',
    SIGNIN: 'Login',
  },
  users: {
    TITLE: 'Users',
    SEARCH_TITLE: 'Search user',
    LIST_TITLE: 'User list',
    USERNAME: 'Username',
    EMAIL: 'Email',
    FIRSTNAME: 'First name',
    LASTNAME: 'Last name',
    PASSWORD: 'Password',
    PASSWORD_CONFIRM: 'Password confirmation',
    ROLE: 'Role',
    CREATION_DATE: 'Creation date',
    NEW_TITLE: 'User creation',
    EDIT_TITLE: 'Editing user %{username}',
    DELETE_CONFIRM: 'Delete the user?',
  },
  roles: {
    TITLE: 'Roles',
    LABEL: 'Name',
    PERMISSIONS: 'Permissions',
    ENABLED: 'Actives permissions',
    AVAILABLE: 'Permissions available',
    LIST_TITLE: 'Roles',
    DETAIL_TITLE: 'Editing role %{label}',
    NEW_TITLE: 'Role creation',
    DELETE_CONFIRM: 'Delete the role?',
  },
  history: {
    TITLE: 'History',
    SEARCH_TITLE: 'Search logs',
    LIST_TITLE: 'List of logs',
    USERNAME: 'Username',
    ID_ITEM: 'Item id',
    TABLE: 'Table',
    MESSAGE: 'Message',
    MODIFICATION_TYPE: {
      TITLE: 'Modification type',
      CREATE: 'Create',
      UPDATE: 'Update',
      DELETE: 'Delete',
    },
    DATE: 'Date',
  },
  scheduled: {
    TITLE: 'Planned tasks',
    TASKNAME: 'Task name',
    FREQUENCY: 'Frequency',
    EXECUTIONS: 'Number of executions',
    PREVIOUS_START: 'Last execution start',
    PREVIOUS_END: 'Last execution end',
    NEVER_EXECUTED: 'Never executed yet',
    DURATION: 'Execution time: %{duration} ms',
    NEXT: 'Next execution',
    STATUS: 'Status',
    START: 'Start the task',
    threads: {
      TITLE: 'Threads statistics',
      ACTIVE: 'Number of active threads: ',
      INACTIVE: 'Number of inactive threads: ',
      MIN: 'Minimum threads number: ',
      MAX: 'Maximum threads number: ',
      LARGEST_POOL: 'Largest pool size: ',
    },
    DATE_FORMAT: 'DD-MM-YYYY kk:mm:ss',
  },
  logs: {
    TITLE: 'Logs manager',
    ADD_TITLE: 'Add log',
    SEARCH_TITLE: 'Search log',
    DEFAULT_TITLE: 'Default logs',
    CHANGED_TITLE: 'Changed logs',
    NAME: 'Log name',
    LEVEL: 'Level',
    EMPTY: 'No logs',
    SELECT_TRACE: 'Trace',
    SELECT_OFF: 'Off',
    SELECT_INACTIVE: 'Inactive',
    SELECT_INFO: 'Info',
    SELECT_DEBUG: 'Debug',
    SELECT_ERROR: 'Error',
    SELECT_WARN: 'Warn',
  },
  actions: {
    BACK: 'Back',
    CANCEL: 'Cancel',
    SAVE: 'Save',
    DELETE: 'Delete',
    NEW: 'New',
    CONFIRM: 'Confirm',
    SEARCH: 'Search',
    ADD: 'Add',
  },
  message: {
    SUCCESS: 'Changes have been successfully saved',
    ERROR: 'An error append while saving changes',
  },
  wsError: {
    INTERNAL_ERROR: 'Connection error',
    AUTHENTICATION_EXPIRED: 'Administration session has expired',
    FIELD_REQUIRED: 'Field \'%{field0}\' is required',
    COLOR_INVALID: 'Field \'%{field0}\' must be an hexadecimal color: #ff00ff',
    EMAIL_INVALID: 'Email address \'%{field0}\' is invalid',
    USERNAME_ALREADY_EXISTS: 'This username is already used, please choose another one',
    EMAIL_ALREADY_EXISTS: 'This email address is already used, please choose another one',
    PASSWORDS_DIFFERENT: 'Passwords \'%{field0}\' et \'%{field1}\' must match',
    WRONG_LOGIN_OR_PASSWORD: 'The username or password is incorrect',
    TOO_MANY_WRONG_ATTEMPS: 'Due to login attempt errors, your account is locked for %{field0} minutes, please try again later',
    ROLE_LABEL_EXISTS: 'A role already exists with this label',
    PASSWORD_TOO_SHORT: 'The password is too short, it must be at least %{field0} characters long',
    MESSAGE: '%{field0}',
  },
  date: {
    long: 'MMMM Do, YYYY HH:mm',
    DATE_START: 'Start date',
    DATE_END: 'End date',
    DATE_FORMAT: 'MM/DD/YYYY',
  },
  reactTable: {
    EMPTY: 'Empty',
    PREVIOUS: 'Previous',
    NEXT: 'Next',
    OF: 'of',
    ROWS: 'rows',
  },

  apiLog:{
    TITLE: 'Logs',
    date: 'Date',
    api:'hostname',
    url: 'URL',
    method: 'Method',
    code: 'Status Code',
    request: 'request',
    response: 'response',
    header: 'Header',
    body: 'Body',
    apiFilter: 'Filter by API name :',
    statusCodeFilter: 'Filter by status code :',
    download: 'Download full text',
    noContent: 'No matching results',
    empty: 'This API does not contain headers or bodies for the request and the response. ',
    emptyBody: 'Empty body',
    emptyHeader: 'Empty Header'
  },
};

export default en;
